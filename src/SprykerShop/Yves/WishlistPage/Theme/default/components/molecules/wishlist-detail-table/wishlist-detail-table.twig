{# fe-sniffer:disabled correct-twig-component-structure #}
{% extends model('component') %}

{# @deprecated - This config.name will be renamed to 'wishlist-detail-table' with next release. #}
{% define config = {
    name: 'wishlist-table',
} %}

{% define data = {
    wishlistItems: required,
    wishlistName: required,
    wishlistRemoveItemFormCloner: required,
    wishlistMoveToCartFormCloner: required,
} %}

{% block body %}
    <div class="is-scrollable-x">
        <table class="table table--expand">
            <thead>
                <tr>
                    <th colspan="2">{{ 'customer.account.wishlist.product' | trans  }}</th>
                    <th>{{ 'customer.account.wishlist.price' | trans  }}</th>
                    <th>{{ 'customer.account.wishlist.availability' | trans  }}</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
            {% for item in data.wishlistItems %}
                {% set isItemAvailable = item.available is defined and item.available and item.price is defined and item.price is not null %}
                {% set productDiscontinuedWidget = findWidget('ProductDiscontinuedWidget', [item.sku]) %}
                {% set isDiscontinued = productDiscontinuedWidget.isDiscontinued ?? widgetBlock('ProductDiscontinuedWidgetPlugin', 'isDiscontinued', item.sku) %} {# @deprecated Use ProductDiscontinuedWidget instead of ProductDiscontinuedWidgetPlugin. #}
                {% if isDiscontinued is not null %}
                    {% set isItemAvailable = not isDiscontinued and isItemAvailable %}
                {% endif %}
                <tr>
                    <td>
                        {% set imageUrl = item.images[0].externalUrlSmall %}
                        {% if imageUrl %}
                            {% include molecule('lazy-image') with {
                                modifiers: ['thumbnail', 'small', 'min-size'],
                                data: {
                                    imageSrc: imageUrl,
                                    imageTitle: item.name | default,
                                },
                            } only %}
                        {% endif %}
                    </td>
                    <td>
                        <ul>
                            <li><a href="{{ item.url }}">{{ item.name }}</a></li>
                            <li>{{ item.sku }}</li>
                            <li>
                                {% set listOfAttributes = {} %}
                                {% for attribute in item.superAttributesDefinition if item.attributes[attribute] is defined %}
                                    {% set listOfAttributes = listOfAttributes|merge({ ('product.attribute.' ~ attribute) | trans: item.attributes[attribute] }) %}
                                {% endfor %}

                                {% include molecule('product-item-attributes') with {
                                    data: {
                                        list: listOfAttributes,
                                    },
                                } only %}
                            </li>
                        </ul>
                    </td>
                    <td nowrap="nowrap">
                        {% if item.price is not null %}
                            {% include molecule('money-price') with {
                                data: {
                                    amount: item.price,
                                    originalAmount: item.prices.ORIGINAL is not defined or item.prices.ORIGINAL is empty ? null : item.prices.ORIGINAL
                                }
                            } only %}
                        {% else %}
                            N/A
                        {% endif %}
                    </td>
                    <td>
                        {% if isItemAvailable %}
                            {{ 'customer.account.wishlist.available' | trans }}
                        {% else %}
                            {% widget 'ProductDiscontinuedWidget' args [item.sku] use view('wishlist-product-discontinued', 'ProductDiscontinuedWidget') only %}
                            {% elsewidget 'ProductDiscontinuedWidgetPlugin' args [item.sku] use view('wishlist-product-discontinued', 'ProductDiscontinuedWidget') only %} {# @deprecated Use ProductDiscontinuedWidget instead. #}
                            {% nowidget %}
                                {{ 'customer.account.wishlist.not_available' | trans }}
                            {% endwidget %}
                        {% endif %}
                    </td>
                    <td>
                        <ul class="menu menu--inline float-right">
                            {% if isItemAvailable %}
                                <li class="menu__item">
                                    {% set wishlistMoveToCartFormCloner = data.wishlistMoveToCartFormCloner.getForm.createView %}

                                    {{ form_start(wishlistMoveToCartFormCloner, { 'action': path('wishlist/move-to-cart', {sku: item.sku, 'wishlist-name': data.wishlistName}), 'name': 'addToCart_' ~ loop.index, 'attr': {'id': 'addToCart_' ~ loop.index, 'class': 'col'}}) }}
                                        <button class="link" title="{{ 'customer.account.wishlist.add-to-cart' | trans }}">
                                            {% include atom('icon') with {
                                                data: {
                                                    name: 'cart-plus',
                                                },
                                            } only %}
                                        </button>
                                    {{ form_end(wishlistMoveToCartFormCloner) }}
                                </li>
                            {% endif %}
                            <li class="menu__item">
                                {% set wishlistRemoveItemFormCloner = data.wishlistRemoveItemFormCloner.getForm.createView %}

                                {{ form_start(wishlistRemoveItemFormCloner, {'action':path('wishlist/remove-item', {sku: item.sku, 'wishlist-name': data.wishlistName}), 'name': 'deleteWishlistItem_' ~ loop.index, 'attr': {'id': 'deleteWishlistItem_' ~ loop.index, 'class': 'col'}}) }}
                                    <button class="link" title="{{ 'customer.account.wishlist.remove' | trans }}">
                                        {% include atom('icon') with {
                                            data: {
                                                name: 'remove',
                                            },
                                        } only %}
                                    </button>
                                {{ form_end(wishlistRemoveItemFormCloner) }}
                            </li>
                        </ul>
                    </td>
                </tr>
                {% widget 'WishlistProductAlternativeWidget' args [item, data.wishlistName] only %}
                {% elsewidget 'ProductAlternativeWidgetPlugin' args [item, data.wishlistName] only %} {# @deprecated Use WishlistProductAlternativeWidget instead. #}
                {% endwidget %}
            {% endfor %}
            </tbody>
        </table>
    </div>
{% endblock %}
